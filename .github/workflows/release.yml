---
name: Release

on:
  pull_request:
  push:
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.event_name == 'pull_request' }}

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest
    outputs:
      published: ${{ steps.release.outputs.published }}
      release-git-tag: ${{ steps.release.outputs.release-git-tag }}
    steps:
    - uses: actions/checkout@v4

    - name: Release
      id: release
      uses: ahmadnassri/action-semantic-release@v2.2.8
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-and-push:
    needs: release
    name: Build and Push Docker Images
    strategy:
      matrix:
        architecture: [amd64, arm64]
        os: [{package_type: deb, os: ubuntu, version: 22.04}, {package_type: deb, os: debian, version: 12-slim}, {package_type: apk, os: alpine, version: 3}, {package_type: rpm, os: redhat/ubi9, version: latest}, {package_type: rpm, os: amazonlinux, version: 2023}]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - uses: docker/setup-qemu-action@v3
    - uses: docker/setup-buildx-action@v3

    - name: Set release tag
      id: set-tag
      run: |
        if [ -n "${{ needs.release.outputs.release-git-tag }}" ]; then
          echo "RELEASE_TAG=${{ needs.release.outputs.release-git-tag }}" >> $GITHUB_ENV
        else
          echo "RELEASE_TAG=unreleased" >> $GITHUB_ENV
        fi

    - name: Docker meta
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ghcr.io/gh-org-template/kong-docker
        tags: |
          type=ref,event=branch
          type=sha
          type=raw,value=${{ env.RELEASE_TAG }}
        flavor: |
          suffix=-${{ matrix.architecture }}-${{ matrix.os.os }}
        labels: |
          org.opencontainers.image.version=${{ env.RELEASE_TAG }}
          org.opencontainers.image.revision={{sha}}
          org.opencontainers.image.created={{date 'YYYY-MM-DDTHH:mm:ssZ'}}


    - name: Log in to the Container registry
      if: ${{ needs.release.outputs.published == 'true' }}
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and push Docker Image
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: linux/${{ matrix.architecture }}
        push: ${{ needs.release.outputs.published == 'true' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        file: Dockerfile.${{ matrix.os.package_type }}
        build-args: |
          ARCH=${{ matrix.architecture.docker }}
          DISTRIBUTION_OS=${{ matrix.os.os }}
          DISTRIBUTION_VERSION=${{ matrix.os.version }}

  multi-arch:
    needs: [release, build-and-push]
    name: Create Multi-Arch Manifests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [ubuntu, debian, alpine, redhat/ubi9, amazonlinux]
    steps:
    - name: Log in to the Container registry
      if: ${{ needs.release.outputs.published == 'true' }}
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Combine per OS images into a single multi-arch manifest
      if: ${{ needs.release.outputs.published == 'true' }}
      run: |
        docker manifest create ghcr.io/gh-org-template/kong-docker:${{ needs.release.outputs.release-git-tag }}-${{ matrix.os }} \
          ghcr.io/gh-org-template/kong-docker:${{ needs.release.outputs.release-git-tag }}-aarch64-${{ matrix.os }} \
          ghcr.io/gh-org-template/kong-docker:${{ needs.release.outputs.release-git-tag }}-x86_64-${{ matrix.os }}
        docker manifest push ghcr.io/gh-org-template/kong-docker:${{ needs.release.outputs.release-git-tag }}-${{ matrix.os }}

  done:
    needs: [release, build-and-push, multi-arch]
    name: Done
    if: always()
    runs-on: ubuntu-latest
    steps:
    - name: Log in to the Container registry
      if: ${{ needs.release.outputs.published == 'true' }}
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Create a final multi-arch manifest for Ubuntu only
      if: ${{ needs.release.outputs.published == 'true' }}
      run: |
        docker manifest create ghcr.io/gh-org-template/kong-docker:${{ needs.release.outputs.release-git-tag }} \
          ghcr.io/gh-org-template/kong-docker:${{ needs.release.outputs.release-git-tag }}-x86_64-ubuntu \
          ghcr.io/gh-org-template/kong-docker:${{ needs.release.outputs.release-git-tag }}-aarch64-ubuntu
        docker manifest push ghcr.io/gh-org-template/kong-docker:${{ needs.release.outputs.release-git-tag }}

    - name: Check for Failed Jobs
      run: |
        if [[ "${{ needs.release.result }}" == "failure" || "${{ needs.build-and-push.result }}" == "failure" || "${{ needs.multi-arch.result }}" == "failure" ]]; then
          echo "One or more jobs failed. Marking release as failed."
          exit 1
        else
          echo "All jobs succeeded or were skipped. Marking release as successful."
        fi
    - run: echo 'done'
